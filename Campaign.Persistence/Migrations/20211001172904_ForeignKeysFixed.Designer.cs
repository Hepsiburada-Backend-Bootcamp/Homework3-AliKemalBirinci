// <auto-generated />
using System;
using CampaignApi.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CampaignApi.Migrations
{
    [DbContext(typeof(CampaignDbContext))]
    [Migration("20211001172904_ForeignKeysFixed")]
    partial class ForeignKeysFixed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CampaignApi.Models.Entities.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Ikinci ürün yüzde elli indirimli.",
                            EndDate = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Monitor Kampanya",
                            StartDate = new DateTime(2021, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ikinci ürün yüzde yirmi indirimli.",
                            EndDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Others Kampanya",
                            StartDate = new DateTime(2021, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CampaignApi.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductGroupId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple iPad",
                            Price = 1000.0,
                            ProductGroupId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung Smart TV",
                            Price = 1500.0,
                            ProductGroupId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nokia 130",
                            Price = 1200.0,
                            ProductGroupId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dell Monitor",
                            Price = 800.0,
                            ProductGroupId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Samsung Monitor",
                            Price = 1000.0,
                            ProductGroupId = 2
                        });
                });

            modelBuilder.Entity("CampaignApi.Models.Entities.ProductGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Monitors"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("CampaignApi.Models.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Ankara",
                            Name = "AnkaMall"
                        },
                        new
                        {
                            Id = 2,
                            City = "Istanbul",
                            Name = "Akasya"
                        },
                        new
                        {
                            Id = 3,
                            City = "Istanbul",
                            Name = "Mall Of Ist"
                        });
                });

            modelBuilder.Entity("CampaignProductGroup", b =>
                {
                    b.Property<int>("CampaignsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductGroupsId")
                        .HasColumnType("int");

                    b.HasKey("CampaignsId", "ProductGroupsId");

                    b.HasIndex("ProductGroupsId");

                    b.ToTable("CampaignProductGroup");
                });

            modelBuilder.Entity("CampaignStore", b =>
                {
                    b.Property<int>("CampaignsId")
                        .HasColumnType("int");

                    b.Property<int>("StoresId")
                        .HasColumnType("int");

                    b.HasKey("CampaignsId", "StoresId");

                    b.HasIndex("StoresId");

                    b.ToTable("CampaignStore");
                });

            modelBuilder.Entity("CampaignApi.Models.Entities.Product", b =>
                {
                    b.HasOne("CampaignApi.Models.Entities.ProductGroup", "ProductGroup")
                        .WithMany("Products")
                        .HasForeignKey("ProductGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductGroup");
                });

            modelBuilder.Entity("CampaignProductGroup", b =>
                {
                    b.HasOne("CampaignApi.Models.Entities.Campaign", null)
                        .WithMany()
                        .HasForeignKey("CampaignsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampaignApi.Models.Entities.ProductGroup", null)
                        .WithMany()
                        .HasForeignKey("ProductGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampaignStore", b =>
                {
                    b.HasOne("CampaignApi.Models.Entities.Campaign", null)
                        .WithMany()
                        .HasForeignKey("CampaignsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampaignApi.Models.Entities.Store", null)
                        .WithMany()
                        .HasForeignKey("StoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampaignApi.Models.Entities.ProductGroup", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
